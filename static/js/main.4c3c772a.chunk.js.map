{"version":3,"sources":["Components/Container/Container.styled.js","Components/Container/Container.jsx","Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.js","Components/Filter/Filter.jsx","Components/App/App.jsx","index.js"],"names":["PhoneBook","styled","div","Title","h1","Container","title","children","Form","form","Input","input","Label","label","Button","button","Error","span","ContactForm","onSubmit","initialValues","name","number","validate","values","errors","test","setSubmitting","resetForm","touched","handleChange","handleSubmit","isSubmitting","type","onChange","value","disabled","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","id","onClick","propTypes","PropTypes","func","isRequired","InputFilter","LabelFilter","Filter","App","state","filter","addContact","item","uuid","includeName","reduce","acc","contact","includeNumber","include","alert","setState","changeFilter","event","target","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","this","visibleContacts","className","Component","ReactDOM","render","StrictMode","theme","colors","white","black","green","red","blue","primaryText","secondaryText","document","getElementById"],"mappings":"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","file":"static/js/main.4c3c772a.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const PhoneBook = styled.div`\r\n  max-width: 600px;\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px 30px;\r\n  background-color: rgb(207, 86, 255);\r\n  box-shadow: 0 15px 15px rgba(0, 0, 0, 0.55);\r\n  border-radius: 10px;\r\n  width: 420px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  /* font-size: 50px; */\r\n`;\r\n","import { Title, PhoneBook } from \"./Container.styled\";\r\n\r\nconst Container = ({title, children}) => {\r\n    return (\r\n        <PhoneBook>\r\n            {title && <Title>{title}</Title>}\r\n                {children}\r\n        </PhoneBook>\r\n    )\r\n}\r\n\r\nexport default Container;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  flex-direction: column;\r\n  border-radius: 15px;\r\n  background-color: purple;\r\n  padding: 25px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: max-content;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\r\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\r\n  color: black;\r\n  background-color: rgb(192, 138, 243);\r\n\r\n  &:hover {\r\n    background-color: rgb(177 117 250);\r\n    transform: scale(1.05);\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const Error = styled.span`\r\n  font-size: 11px;\r\n  left: 400px;\r\n  bottom: 0px;\r\n  color: coral;\r\n  margin: 10px;\r\n`;\r\n","import { Formik } from 'formik';\r\nimport { Form, Input, Label, Button, Error } from \"./ContactForm.styled\";\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: '', number: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n          errors.name = 'Обязательное поле';\r\n        } else if (!values.number) {\r\n          errors.number = 'Обязательное поле';\r\n        } else if (\r\n          !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\r\n            values.name,\r\n          )\r\n        ) {\r\n          errors.name =\r\n            \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\";\r\n        } else if (\r\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n            values.number,\r\n          )\r\n        ) {\r\n          errors.number =\r\n            'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        onSubmit(values);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Label>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n              value={values.name}\r\n            />\r\n            {touched.name && errors.name && <Error>{errors.name}</Error>}\r\n          </Label>\r\n          <Label>\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              onChange={handleChange}\r\n              value={values.number}\r\n            />\r\n            {touched.number && errors.number && <Error>{errors.number}</Error>}\r\n          </Label>\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={\r\n              isSubmitting || values.name === '' || values.number === ''\r\n            }\r\n          >\r\n            Add contacts\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import { MdPerson } from \"react-icons/md\";\r\n// import { MdStayPrimaryPortrait } from \"react-icons/md\";\r\n// import { Form, Input, Label, Button} from \"./ContactForm.styled\";\r\n\r\n// export default class ContactForm extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   handleChange = event => {\r\n//     this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n//   };\r\n\r\n//   handleSubmit = event => {\r\n//     event.preventDefault();\r\n//     const { name, number } = this.state;\r\n//     this.props.onSubmit(name, number);\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({ name: '', number: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n\r\n//     return (\r\n//       <Form onSubmit={this.handleSubmit}>\r\n//         <Label >\r\n//           <MdPerson></MdPerson>\r\n//           Name\r\n//           <Input\r\n            \r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={name}\r\n//             placeholder=\"Patricia Manterola\"\r\n//             onChange={this.handleChange}\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             maxLength=\"33\"\r\n//           />\r\n//         </Label>\r\n\r\n//         <Label >\r\n//           <MdStayPrimaryPortrait></MdStayPrimaryPortrait>\r\n//           Number\r\n//           <Input\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             value={number}\r\n//             placeholder=\"236-02-00\"\r\n//             onChange={this.handleChange}\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             maxLength=\"20\"\r\n//           />\r\n//         </Label>\r\n//         <Button  type=\"submit\">\r\n//           Add contact\r\n//         </Button>\r\n//       </Form>\r\n//     );\r\n//   }\r\n// }\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  padding: 10px 30px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 16px;\r\n  color: whitesmoke;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-left: 20px;\r\n  cursor: pointer;\r\n  padding: 5px 15px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\r\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\r\n\r\n  &:hover {\r\n    background-color: rgb(243, 65, 65);\r\n    transform: scale(1.05);\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types'\r\nimport { List, Item, Button } from './ContactList.styled'\r\n\r\nexport default function ContactList({contacts, onDeleteContact}) {\r\n    return (\r\n        <List>\r\n            {contacts.map(({ name, number, id }) =>\r\n            <Item key={id}>\r\n                    {name} : {number}\r\n                    <Button\r\n                        type=\"button\"\r\n                        onClick={() =>onDeleteContact(id)}>\r\n                        Delete\r\n                    </Button>\r\n            </Item>\r\n            )}\r\n\r\n        </List>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const InputFilter = styled.input`\r\n  border-radius: 3px;\r\n  margin-top: 5px;\r\n  border: none;\r\n  outline: none;\r\n  margin-left: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const LabelFilter = styled.label`\r\n  color: purple;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\n","import PropTypes from 'prop-types'\r\nimport { InputFilter, LabelFilter } from './Filter.styled'\r\n\r\nexport default function Filter({value, onChange}) {\r\n    return (\r\n        <LabelFilter>\r\n            Find contacts by name\r\n            <InputFilter\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </LabelFilter>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import React, { Component } from \"react\";\r\nimport Container from \"../Container/Container\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n  \r\n  addContact = (name, number) => {\r\n    const item = {\r\n       id : uuid(),\r\n      name,\r\n      number,\r\n    }\r\n     const includeName = this.state.contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      [],\r\n      );\r\n     const includeNumber = this.state.contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      [],\r\n      );\r\n\r\n \r\n  \r\n      if(name === '' || number === '') {\r\n      alert('Please enter all fields!');\r\n      return;\r\n}\r\n\r\n        if (includeName.include(name)) {\r\n                alert(`${name} is already in contacts`);\r\n              return;\r\n        } else if (includeNumber.include(number)){\r\n          alert(`${number} is already in contacts`);\r\n              return;\r\n        } else {\r\n          this.setState(({ contacts }) => ({\r\n                contacts: [item, ...contacts],\r\n          }));\r\n        }\r\n  }\r\n  \r\n  \r\n changeFilter = event => {\r\n    this.setState({ filter: event.target.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n\r\n  render() {\r\n   \r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <>\r\n       <Container>\r\n        <h1 className=\"phonebook\">Phonebook</h1>\r\n        <ContactForm contacts={contacts} onSubmit={this.addContact} />\r\n\r\n        <h2 className=\"contacts\">Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n\r\n// import React, { Component } from \"react\";\r\n// import { v4 as uuid } from 'uuid';\r\n// import ContactForm from\"../ContactForm/ContactForm\";\r\n// import ContactList from \"../ContactList/ContactList\";\r\n// import Filter from \"../Filter/Filter\";\r\n// import Container from \"../Container/Container\";\r\n\r\n// class App extends Component {\r\n \r\n//   state = {\r\n//     contacts: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filter: '',\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n  \r\n//   addContact = (name, number) => {\r\n//     const item = {\r\n//        id : uuid(),\r\n//       name,\r\n//       number,\r\n//     }\r\n//      const includeName = this.state.contacts.reduce(\r\n//       (acc, contact) => [...acc, contact.name],\r\n//       [],\r\n//       );\r\n//      const includeNumber = this.state.contacts.reduce(\r\n//       (acc, contact) => [...acc, contact.number],\r\n//       [],\r\n//       );\r\n\r\n \r\n  \r\n//       if(name === '' || number === '') {\r\n//       alert('Please enter all fields!');\r\n//       return;\r\n//       }\r\n\r\n//         if (includeName.includes(name)) {\r\n//                 alert(`${name} is already in contacts`);\r\n//               return;\r\n//         } else if (includeNumber.includes(number)){\r\n//           alert(`${number} is already in contacts`);\r\n//               return;\r\n//         } else {\r\n//           this.setState(({ contacts }) => ({\r\n//                 contacts: [item, ...contacts],\r\n//           }));\r\n//         }\r\n//   }\r\n  \r\n  \r\n//   changeFilter = event => {\r\n//     this.setState({ filter: event.currentTarget.value });\r\n//   };\r\n\r\n//   getVisibleContacts = () => {\r\n//     const { filter, contacts } = this.state;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n//   };\r\n\r\n//   deleteContact = contactId => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { contacts, filter } = this.state;\r\n//     const visibleContacts = this.getVisibleContacts();\r\n//     return (\r\n//       <>\r\n//        <Container>\r\n//         <h1 className=\"phonebook\">Phonebook</h1>\r\n//         <ContactForm contacts={contacts} onSubmit={this.addContact} />\r\n\r\n//         <h2 className=\"contacts\">Contacts</h2>\r\n//         <Filter value={filter} onChange={this.changeFilter} />\r\n//         <ContactList\r\n//           contacts={visibleContacts}\r\n//           onDeleteContact={this.deleteContact}\r\n//         />\r\n//       </Container>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nconst theme = {\n  colors: {\n    white: \"#ffffff\",\n    black: \"#010101\",\n    green: \"#4caf50\",\n    red: \"#f44336\",\n    blue: \"#2196f3\",\n    primaryText: \"212121\",\n    secondaryText: \"#757575\",\n  },\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}